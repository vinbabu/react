{"ast":null,"code":"import _defineProperty from \"/home/vinoth/Public/react/redux1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/vinoth/Public/react/redux1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/vinoth/Public/react/redux1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vinoth/Public/react/redux1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vinoth/Public/react/redux1/src/components/benefits/BenefitSelection.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchBenefits as _fetchBenefits, selectBenefitCheckBoxes as _selectBenefitCheckBoxes } from \"../../redux\";\nimport \"./Benefits.scss\";\n\nfunction BenefitSelection(props) {\n  var _this = this;\n\n  useEffect(function () {\n    fetchBenefits();\n  }, []);\n  var benefitsData = props.benefitsData;\n  var fetchBenefits = props.fetchBenefits;\n\n  var _useState = useState({\n    basic: [],\n    additional: [],\n    optional: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      catItems = _useState2[0],\n      setCatItems = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isSubmitEnabled = _useState4[0],\n      setSubmitEnabled = _useState4[1];\n\n  useEffect(function () {\n    console.log(\"useEffect catItems: \", catItems);\n  }, [catItems]);\n\n  var selectBenefit = function selectBenefit(event, packageName, categoryName, catr) {\n    console.log(\"event.target.checked\", event.target.checked);\n    console.log(\"event.target.name\", event.target.name);\n    console.log(\"catr\", catr);\n    var checked = event.target.checked;\n    var item = {\n      name: event.target.name,\n      categoryName: categoryName\n    };\n\n    if (checked) {\n      setSubmitEnabled([true]);\n      setCatItems(_objectSpread(_objectSpread({}, catItems), {}, _defineProperty({}, packageName, [].concat(_toConsumableArray(catItems[packageName]), [item]))));\n    } else {\n      var index = catItems[packageName].findIndex(function (element) {\n        return element.name === item.name;\n      });\n\n      if (index > -1) {\n        setCatItems(_objectSpread(_objectSpread({}, catItems), {}, _defineProperty({}, packageName, [].concat(_toConsumableArray(catItems[packageName].slice(0, index)), _toConsumableArray(catItems[packageName].slice(index + 1))))));\n      } else {\n        console.log(\"Not found\");\n      }\n    }\n  };\n\n  var onSubmit = function onSubmit(values) {\n    console.log(\"catItems\", catItems);\n    props.selectBenefitCheckBoxes(catItems);\n    props.history.push(\"/review\");\n  };\n\n  return benefitsData.loading ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }, \"Loading\") : benefitsData.error ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, benefitsData.error) : benefitsData.benefits ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, \"Select Benefits\")), benefitsData.benefits.map(function (_ref, index) {\n    var packageName = _ref.packageName,\n        categories = _ref.categories,\n        benefits = _ref.benefits;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"benefits-section\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"benefits-section__header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }\n    }, packageName, \" Benefits\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"benefits-section__header-cb\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: packageName,\n      onChange: function onChange(event) {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Include\"))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, \"These will be part of your \", packageName, \" package\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"benefits-section__categories\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, categories.map(function (cat, j) {\n      return /*#__PURE__*/React.createElement(\"section\", {\n        className: \"benefits-section__category-section\",\n        key: j,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 10\n        }\n      }, cat.categoryName), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 10\n        }\n      }, cat.benefits.map(function (ben, k) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: k,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: ben.benefitName,\n          onChange: function onChange(event) {\n            selectBenefit(event, packageName.toLowerCase(), cat.categoryName, index);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }\n        }, ben.benefitName));\n      })));\n    })));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: onSubmit,\n    disabled: !isSubmitEnabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, \"Review selection\"))) : null;\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // console.log(\"Comming 2\" + state);\n  return {\n    benefitsData: state.benefits\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchBenefits: function fetchBenefits() {\n      return dispatch(_fetchBenefits());\n    },\n    selectBenefitCheckBoxes: function selectBenefitCheckBoxes(cat) {\n      return dispatch(_selectBenefitCheckBoxes(cat));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BenefitSelection);","map":{"version":3,"sources":["/home/vinoth/Public/react/redux1/src/components/benefits/BenefitSelection.js"],"names":["React","Fragment","useEffect","useState","connect","fetchBenefits","selectBenefitCheckBoxes","BenefitSelection","props","benefitsData","basic","additional","optional","catItems","setCatItems","isSubmitEnabled","setSubmitEnabled","console","log","selectBenefit","event","packageName","categoryName","catr","target","checked","name","item","index","findIndex","element","slice","onSubmit","values","history","push","loading","error","benefits","map","categories","cat","j","ben","k","benefitName","toLowerCase","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchBenefits, selectBenefitCheckBoxes } from \"../../redux\";\nimport \"./Benefits.scss\";\n\nfunction BenefitSelection(props) {\n\tuseEffect(() => {\n\t\tfetchBenefits();\n\t}, []);\n\tconst benefitsData = props.benefitsData;\n\tconst fetchBenefits = props.fetchBenefits;\n\n\tconst [catItems, setCatItems] = useState({\n\t\tbasic: [],\n\t\tadditional: [],\n\t\toptional: [],\n\t});\n\n\tconst [isSubmitEnabled, setSubmitEnabled] = useState(false);\n\n\tuseEffect(() => {\n\t\tconsole.log(\"useEffect catItems: \", catItems);\n\t}, [catItems]);\n\n\tconst selectBenefit = (event, packageName, categoryName, catr) => {\n\t\tconsole.log(\"event.target.checked\", event.target.checked);\n\t\tconsole.log(\"event.target.name\", event.target.name);\n\t\tconsole.log(\"catr\", catr);\n\n\t\tconst checked = event.target.checked;\n\t\tconst item = {\n\t\t\tname: event.target.name,\n\t\t\tcategoryName: categoryName,\n\t\t};\n\n\t\tif (checked) {\n\t\t\tsetSubmitEnabled([true]);\n\t\t\tsetCatItems({\n\t\t\t\t...catItems,\n\t\t\t\t[packageName]: [...catItems[packageName], item],\n\t\t\t});\n\t\t} else {\n\t\t\tconst index = catItems[packageName].findIndex(\n\t\t\t\t(element) => element.name === item.name\n\t\t\t);\n\t\t\tif (index > -1) {\n\t\t\t\tsetCatItems({\n\t\t\t\t\t...catItems,\n\t\t\t\t\t[packageName]: [\n\t\t\t\t\t\t...catItems[packageName].slice(0, index),\n\t\t\t\t\t\t...catItems[packageName].slice(index + 1),\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Not found\");\n\t\t\t}\n\t\t}\n\t};\n\n\tconst onSubmit = (values) => {\n\t\tconsole.log(\"catItems\", catItems);\n\t\tprops.selectBenefitCheckBoxes(catItems);\n\t\tprops.history.push(\"/review\");\n\t};\n\n\treturn benefitsData.loading ? (\n\t\t<h2>Loading</h2>\n\t) : benefitsData.error ? (\n\t\t<h2>{benefitsData.error}</h2>\n\t) : benefitsData.benefits ? (\n\t\t<Fragment>\n\t\t\t<h1>\n\t\t\t\t<span>Select Benefits</span>\n\t\t\t</h1>\n\t\t\t{benefitsData.benefits.map(\n\t\t\t\t({ packageName, categories, benefits }, index) => (\n\t\t\t\t\t<section className=\"benefits-section\" key={index}>\n\t\t\t\t\t\t<div className=\"benefits-section__header\">\n\t\t\t\t\t\t\t<h2>{packageName} Benefits</h2>\n\t\t\t\t\t\t\t<div className=\"benefits-section__header-cb\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tname={packageName}\n\t\t\t\t\t\t\t\t\tonChange={(event) => {}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label>Include</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p>These will be part of your {packageName} package</p>\n\t\t\t\t\t\t<div className=\"benefits-section__categories\">\n\t\t\t\t\t\t\t{categories.map((cat, j) => (\n\t\t\t\t\t\t\t\t<section className=\"benefits-section__category-section\" key={j}>\n\t\t\t\t\t\t\t\t\t<h3>{cat.categoryName}</h3>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t{cat.benefits.map((ben, k) => (\n\t\t\t\t\t\t\t\t\t\t\t<li key={k}>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={ben.benefitName}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectBenefit(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackageName.toLowerCase(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcat.categoryName,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>{ben.benefitName}</label>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t)\n\t\t\t)}\n\t\t\t<div className=\"button-bar\">\n\t\t\t\t<button type=\"submit\" onClick={onSubmit} disabled={!isSubmitEnabled}>\n\t\t\t\t\tReview selection\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Fragment>\n\t) : null;\n}\n\nconst mapStateToProps = (state) => {\n\t// console.log(\"Comming 2\" + state);\n\treturn {\n\t\tbenefitsData: state.benefits,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tfetchBenefits: () => dispatch(fetchBenefits()),\n\t\tselectBenefitCheckBoxes: (cat) => dispatch(selectBenefitCheckBoxes(cat)),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BenefitSelection);\n"]},"metadata":{},"sourceType":"module"}