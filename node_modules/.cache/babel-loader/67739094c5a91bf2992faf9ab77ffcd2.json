{"ast":null,"code":"import _defineProperty from \"/home/vinoth/Public/react/redux1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/vinoth/Public/react/redux1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/vinoth/Public/react/redux1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vinoth/Public/react/redux1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vinoth/Public/react/redux1/src/components/benefits/BenefitSelection.js\";\nimport React, { Fragment, useEffect, useState } from \"react\"; //import { Field, reduxForm } from \"redux-form\";\n\nimport { connect } from \"react-redux\";\nimport { fetchBenefits as _fetchBenefits, appendCategory as _appendCategory } from \"../../redux\";\nimport \"./Benefits.css\";\n\nfunction BenefitSelection(props) {\n  var _this = this;\n\n  useEffect(function () {\n    fetchBenefits();\n  }, []);\n  var benefitsData = props.benefitsData;\n  var fetchBenefits = props.fetchBenefits;\n  var handleSubmit = props.handleSubmit,\n      pristine = props.pristine,\n      reset = props.reset,\n      submitting = props.submitting;\n\n  var _useState = useState({\n    basic: [],\n    additional: [],\n    optional: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      catItems = _useState2[0],\n      setCatItems = _useState2[1];\n\n  useEffect(function () {\n    console.log(\"useEffect catItems: \", catItems);\n  }, [catItems]);\n  var catarr = [];\n\n  var changeCat = function changeCat(event, packageName, categoryName, catr) {\n    // console.log(\"val:\" + event.target.name);\n    // console.log(\"CAT: \" + catr);\n    // //setCatItems({ ...catItems, setCatItems({}) });\n    // localStorage.setItem(\"cat\", event.target.name);\n    // console.log(localStorage.getItem(\"cat\"));\n    console.log(\"event.target.checked\", event.target.checked);\n    console.log(\"event.target.name\", event.target.name);\n    console.log(\"catr\", catr);\n    var checked = event.target.checked;\n    var item = {\n      name: event.target.name,\n      categoryName: categoryName\n    };\n    var index = 0;\n\n    if (checked) {\n      //const newObj = catItems[packageName].push(item);\n      setCatItems(_objectSpread(_objectSpread({}, catItems), {}, _defineProperty({}, packageName, [].concat(_toConsumableArray(catItems[packageName]), [item]))));\n    } else {\n      var _index = catItems[packageName].findIndex(function (element) {\n        return element.name === item.name;\n      });\n\n      if (_index > -1) {\n        // const newObj = catItems[packageName].splice(index, 1);\n        // setCatItems(newObj);\n        setCatItems(_objectSpread(_objectSpread({}, catItems), {}, _defineProperty({}, packageName, [].concat(_toConsumableArray(catItems[packageName].slice(0, _index)), _toConsumableArray(catItems[packageName].slice(_index + 1))))));\n      } else {\n        console.log(\"Not found\");\n      }\n    }\n  };\n\n  var onSubmit = function onSubmit(values) {\n    console.log(\"catItems\", catItems);\n    props.appendCategory(catItems);\n    props.history.push(\"/review\"); //window.location = \"/review\";\n  };\n\n  return benefitsData.loading ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, \"Loading\") : benefitsData.error ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, benefitsData.error) : benefitsData.benefits ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Select Benefits\")), benefitsData.benefits.map(function (_ref, index) {\n    var packageName = _ref.packageName,\n        categories = _ref.categories,\n        benefits = _ref.benefits;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"benefits-section\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"benefits-section__header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, packageName, \" Benefits\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"benefits-section__header-cb\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: packageName,\n      onChange: function onChange(event) {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Include\"))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"These will be part of your \", packageName, \" package\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"benefits-section__categories\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, categories.map(function (cat, j) {\n      return /*#__PURE__*/React.createElement(\"section\", {\n        className: \"benefits-section__category-section\",\n        key: j,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }, cat.categoryName), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }\n      }, cat.benefits.map(function (ben, k) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: k,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: ben.benefitName,\n          onChange: function onChange(event) {\n            changeCat(event, packageName.toLowerCase(), cat.categoryName, index);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }\n        }, ben.benefitName));\n      })));\n    })));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\" //onClick={handleSubmit(onSubmit)}\n    ,\n    onClick: onSubmit,\n    disabled: pristine || submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Review selection\"))) : null;\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // console.log(\"Comming 2\" + state);\n  return {\n    benefitsData: state.benefits\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchBenefits: function fetchBenefits() {\n      return dispatch(_fetchBenefits());\n    },\n    appendCategory: function appendCategory(cat) {\n      return dispatch(_appendCategory(cat));\n    }\n  };\n}; // export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(reduxForm({ form: \"BenefitSelection\" })(BenefitSelection));\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BenefitSelection);","map":{"version":3,"sources":["/home/vinoth/Public/react/redux1/src/components/benefits/BenefitSelection.js"],"names":["React","Fragment","useEffect","useState","connect","fetchBenefits","appendCategory","BenefitSelection","props","benefitsData","handleSubmit","pristine","reset","submitting","basic","additional","optional","catItems","setCatItems","console","log","catarr","changeCat","event","packageName","categoryName","catr","target","checked","name","item","index","findIndex","element","slice","onSubmit","values","history","push","loading","error","benefits","map","categories","cat","j","ben","k","benefitName","toLowerCase","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAbA,cAAT,EAAwBC,cAAc,IAAdA,eAAxB,QAA8C,aAA9C;AACA,OAAO,gBAAP;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/BN,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,MAAMI,YAAY,GAAGD,KAAK,CAACC,YAA3B;AACA,MAAMJ,aAAa,GAAGG,KAAK,CAACH,aAA5B;AAL+B,MAOvBK,YAPuB,GAOuBF,KAPvB,CAOvBE,YAPuB;AAAA,MAOTC,QAPS,GAOuBH,KAPvB,CAOTG,QAPS;AAAA,MAOCC,KAPD,GAOuBJ,KAPvB,CAOCI,KAPD;AAAA,MAOQC,UAPR,GAOuBL,KAPvB,CAOQK,UAPR;;AAAA,kBASCV,QAAQ,CAAC;AACvCW,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,UAAU,EAAE,EAF2B;AAGvCC,IAAAA,QAAQ,EAAE;AAH6B,GAAD,CATT;AAAA;AAAA,MASxBC,QATwB;AAAA,MASdC,WATc;;AAe/BhB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,QAApC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,MAAMI,MAAM,GAAG,EAAf;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,WAAR,EAAqBC,YAArB,EAAmCC,IAAnC,EAA4C;AAC5D;AACA;AACA;AACA;AACA;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCG,KAAK,CAACI,MAAN,CAAaC,OAAjD;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAK,CAACI,MAAN,CAAaE,IAA9C;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,IAApB;AAEA,QAAME,OAAO,GAAGL,KAAK,CAACI,MAAN,CAAaC,OAA7B;AACA,QAAME,IAAI,GAAG;AACXD,MAAAA,IAAI,EAAEN,KAAK,CAACI,MAAN,CAAaE,IADR;AAEXJ,MAAAA,YAAY,EAAEA;AAFH,KAAb;AAIA,QAAMM,KAAK,GAAG,CAAd;;AACA,QAAIH,OAAJ,EAAa;AACX;AACAV,MAAAA,WAAW,iCACND,QADM,2BAERO,WAFQ,+BAEUP,QAAQ,CAACO,WAAD,CAFlB,IAEiCM,IAFjC,KAAX;AAID,KAND,MAMO;AACL,UAAMC,MAAK,GAAGd,QAAQ,CAACO,WAAD,CAAR,CAAsBQ,SAAtB,CACZ,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACJ,IAAR,KAAiBC,IAAI,CAACD,IAA1B;AAAA,OADK,CAAd;;AAGA,UAAIE,MAAK,GAAG,CAAC,CAAb,EAAgB;AACd;AACA;AACAb,QAAAA,WAAW,iCACND,QADM,2BAERO,WAFQ,+BAGJP,QAAQ,CAACO,WAAD,CAAR,CAAsBU,KAAtB,CAA4B,CAA5B,EAA+BH,MAA/B,CAHI,sBAIJd,QAAQ,CAACO,WAAD,CAAR,CAAsBU,KAAtB,CAA4BH,MAAK,GAAG,CAApC,CAJI,KAAX;AAOD,OAVD,MAUO;AACLZ,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF;AACF,GAzCD;;AA2CA,MAAMe,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM,EAAI;AACzBjB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAT,IAAAA,KAAK,CAACF,cAAN,CAAqBW,QAArB;AACAT,IAAAA,KAAK,CAAC6B,OAAN,CAAcC,IAAd,CAAmB,SAAnB,EAHyB,CAKzB;AACD,GAND;;AAQA,SAAO7B,YAAY,CAAC8B,OAAb,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADK,GAEH9B,YAAY,CAAC+B,KAAb,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK/B,YAAY,CAAC+B,KAAlB,CADE,GAEA/B,YAAY,CAACgC,QAAb,gBACF,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAIGhC,YAAY,CAACgC,QAAb,CAAsBC,GAAtB,CACC,gBAAwCX,KAAxC;AAAA,QAAGP,WAAH,QAAGA,WAAH;AAAA,QAAgBmB,UAAhB,QAAgBA,UAAhB;AAAA,QAA4BF,QAA5B,QAA4BA,QAA5B;AAAA,wBACE;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAsC,MAAA,GAAG,EAAEV,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,WAAL,cADF,eAEE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAcE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAEA,WAFR;AAGE,MAAA,QAAQ,EAAE,kBAAAD,KAAK,EAAI,CAAE,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnBF,CAFF,CADF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA+BC,WAA/B,aAzBF,eA0BE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGmB,UAAU,CAACD,GAAX,CAAe,UAACE,GAAD,EAAMC,CAAN;AAAA,0BACd;AAAS,QAAA,SAAS,EAAC,oCAAnB;AAAwD,QAAA,GAAG,EAAEA,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,GAAG,CAACnB,YAAT,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGmB,GAAG,CAACH,QAAJ,CAAaC,GAAb,CAAiB,UAACI,GAAD,EAAMC,CAAN;AAAA,4BAChB;AAAI,UAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAED,GAAG,CAACE,WAFZ;AAGE,UAAA,QAAQ,EAAE,kBAAAzB,KAAK,EAAI;AACjBD,YAAAA,SAAS,CACPC,KADO,EAEPC,WAAW,CAACyB,WAAZ,EAFO,EAGPL,GAAG,CAACnB,YAHG,EAIPM,KAJO,CAAT;AAMD,WAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQe,GAAG,CAACE,WAAZ,CA1BF,CADgB;AAAA,OAAjB,CADH,CAFF,CADc;AAAA,KAAf,CADH,CA1BF,CADF;AAAA,GADD,CAJH,eA0EE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP,CAEE;AAFF;AAGE,IAAA,OAAO,EAAEb,QAHX;AAIE,IAAA,QAAQ,EAAExB,QAAQ,IAAIE,UAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CA1EF,CADE,GAsFA,IA1FJ;AA2FD;;AAED,IAAMqC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B;AACA,SAAO;AACL1C,IAAAA,YAAY,EAAE0C,KAAK,CAACV;AADf,GAAP;AAGD,CALD;;AAOA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLhD,IAAAA,aAAa,EAAE;AAAA,aAAMgD,QAAQ,CAAChD,cAAa,EAAd,CAAd;AAAA,KADV;AAELC,IAAAA,cAAc,EAAE,wBAAAsC,GAAG;AAAA,aAAIS,QAAQ,CAAC/C,eAAc,CAACsC,GAAD,CAAf,CAAZ;AAAA;AAFd,GAAP;AAID,CALD,C,CAOA;AACA;AACA;AACA;;;AACA,eAAexC,OAAO,CAAC8C,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C7C,gBAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\n//import { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { fetchBenefits, appendCategory } from \"../../redux\";\nimport \"./Benefits.css\";\n\nfunction BenefitSelection(props) {\n  useEffect(() => {\n    fetchBenefits();\n  }, []);\n  const benefitsData = props.benefitsData;\n  const fetchBenefits = props.fetchBenefits;\n\n  const { handleSubmit, pristine, reset, submitting } = props;\n\n  const [catItems, setCatItems] = useState({\n    basic: [],\n    additional: [],\n    optional: []\n  });\n\n  useEffect(() => {\n    console.log(\"useEffect catItems: \", catItems);\n  }, [catItems]);\n\n  const catarr = [];\n  const changeCat = (event, packageName, categoryName, catr) => {\n    // console.log(\"val:\" + event.target.name);\n    // console.log(\"CAT: \" + catr);\n    // //setCatItems({ ...catItems, setCatItems({}) });\n    // localStorage.setItem(\"cat\", event.target.name);\n    // console.log(localStorage.getItem(\"cat\"));\n\n    console.log(\"event.target.checked\", event.target.checked);\n    console.log(\"event.target.name\", event.target.name);\n    console.log(\"catr\", catr);\n\n    const checked = event.target.checked;\n    const item = {\n      name: event.target.name,\n      categoryName: categoryName\n    };\n    const index = 0;\n    if (checked) {\n      //const newObj = catItems[packageName].push(item);\n      setCatItems({\n        ...catItems,\n        [packageName]: [...catItems[packageName], item]\n      });\n    } else {\n      const index = catItems[packageName].findIndex(\n        element => element.name === item.name\n      );\n      if (index > -1) {\n        // const newObj = catItems[packageName].splice(index, 1);\n        // setCatItems(newObj);\n        setCatItems({\n          ...catItems,\n          [packageName]: [\n            ...catItems[packageName].slice(0, index),\n            ...catItems[packageName].slice(index + 1)\n          ]\n        });\n      } else {\n        console.log(\"Not found\");\n      }\n    }\n  };\n\n  const onSubmit = values => {\n    console.log(\"catItems\", catItems);\n    props.appendCategory(catItems);\n    props.history.push(\"/review\");\n\n    //window.location = \"/review\";\n  };\n\n  return benefitsData.loading ? (\n    <h2>Loading</h2>\n  ) : benefitsData.error ? (\n    <h2>{benefitsData.error}</h2>\n  ) : benefitsData.benefits ? (\n    <Fragment>\n      <h1>\n        <span>Select Benefits</span>\n      </h1>\n      {benefitsData.benefits.map(\n        ({ packageName, categories, benefits }, index) => (\n          <section className='benefits-section' key={index}>\n            <div className='benefits-section__header'>\n              <h2>{packageName} Benefits</h2>\n              <div className='benefits-section__header-cb'>\n                {/*\n                <Field\n                  name={packageName}\n                  id={packageName}\n                  component='input'\n                  type='checkbox'\n                  format={v => v === \"1\"} // converts redux state string to boolean\n                  normalize={v => (v ? \"1\" : \"0\")} // converts checkbox boolean to strings\n                  onChange={event => {\n                    changeCat(event, index);\n                  }}\n                />\n              */}\n                <input\n                  type='checkbox'\n                  name={packageName}\n                  onChange={event => {}}\n                />\n                <label>Include</label>\n              </div>\n            </div>\n            <p>These will be part of your {packageName} package</p>\n            <div className='benefits-section__categories'>\n              {categories.map((cat, j) => (\n                <section className='benefits-section__category-section' key={j}>\n                  <h3>{cat.categoryName}</h3>\n                  <ul>\n                    {cat.benefits.map((ben, k) => (\n                      <li key={k}>\n                        <input\n                          type='checkbox'\n                          name={ben.benefitName}\n                          onChange={event => {\n                            changeCat(\n                              event,\n                              packageName.toLowerCase(),\n                              cat.categoryName,\n                              index\n                            );\n                          }}\n                        />\n                        {/*\n                        <Field\n                          name={ben.benefitName}\n                          id={ben.benefitName}\n                          component='input'\n                          type='checkbox'\n                          format={v => v === \"1\"} // converts redux state string to boolean\n                          normalize={v => (v ? \"1\" : \"0\")} // converts checkbox boolean to string\n                          onChange={event => {\n                            changeCat(event, index);\n                          }}\n                        />\n                        */}\n                        <label>{ben.benefitName}</label>\n                      </li>\n                    ))}\n                  </ul>\n                </section>\n              ))}\n            </div>\n          </section>\n        )\n      )}\n      <div className='button-bar'>\n        <button\n          type='submit'\n          //onClick={handleSubmit(onSubmit)}\n          onClick={onSubmit}\n          disabled={pristine || submitting}\n        >\n          Review selection\n        </button>\n      </div>\n    </Fragment>\n  ) : null;\n}\n\nconst mapStateToProps = state => {\n  // console.log(\"Comming 2\" + state);\n  return {\n    benefitsData: state.benefits\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchBenefits: () => dispatch(fetchBenefits()),\n    appendCategory: cat => dispatch(appendCategory(cat))\n  };\n};\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(reduxForm({ form: \"BenefitSelection\" })(BenefitSelection));\nexport default connect(mapStateToProps, mapDispatchToProps)(BenefitSelection);\n"]},"metadata":{},"sourceType":"module"}